apiVersion: v1
kind: Namespace
metadata:
  name: blog-hugo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog-hugo
  namespace: blog-hugo
spec:
  replicas: 3  # Set the desired number of replicas
  selector:
    matchLabels:
      app: blog-hugo
  template:
    metadata:
      labels:
        app: blog-hugo
    spec:
      containers:
      - name: blog-hugo
        image: ghcr.io/sakrist/blog
        imagePullPolicy: Always
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: ghcr
---
apiVersion: v1
kind: Service
metadata:
  name: blog-hugo
  namespace: blog-hugo
  labels:
    app: blog-hugo
spec:
  ports:
  - name: 80-8080
    port: 8080  # Exposed service port
    targetPort: 80  # Port inside the container
    protocol: TCP
  selector:
    app: blog-hugo
  type: LoadBalancer  # Expose the service externally
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: habit-landing
  namespace: blog-hugo
spec:
  replicas: 3  # Set the desired number of replicas
  selector:
    matchLabels:
      app: habit-landing
  template:
    metadata:
      labels:
        app: habit-landing
    spec:
      containers:
      - name: habit-landing
        image: ghcr.io/sakrist/habit-app-landingpage
        imagePullPolicy: Always
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: ghcr
---
apiVersion: v1
kind: Service
metadata:
  name: habit-landing
  namespace: blog-hugo
  labels:
    app: habit-landing
spec:
  ports:
  - name: 80-8081
    port: 8081  # Exposed service port
    targetPort: 80  # Port inside the container
    protocol: TCP
  selector:
    app: habit-landing
  type: LoadBalancer  # Expose the service externally